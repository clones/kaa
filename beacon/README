Small API doc for kaa.beacon. Some parts are still missing but everything
written here should work. The variable / function names may change in
the future. 

DO NOT ACCESS ANY MEMBER FUNCTIONS OR VARIABLES STARTING WIRH _beacon!!!
They are for internal use only and you can do stuff with the db you
should not be able to do.


Fill the database

You can use the monitor stuff (I will explain later) or you can use
the cache test app to fill the database. Open cache.py in the test dir
and change the db path to the localtion of your database
(e.g. /var/lib/freevo/beacondb). After that call python cache.py with a
directory as argument. The test app will recursive add the files to
the database.


Access the database

[ see doc/api.txt ]


Hidden features

The beacon server can also be used as a small test application. In
normal use, the server won't connect to a database unless a client
connects. You can force the server to connect on startup setting the
environment variable BEACON_DATABASE to the location of the database.
A second environment variable is BEACON_MONITOR, a collon separated
list of directories (plus subdirectories) to be monitored using
inotify. Both variables are created to help testing beacon, the may be
removed later.

Example:
export BEACON_DATABASE=/home/dmeyer/.beacon
export BEACON_MONITOR=/home/dmeyer/video:/home/dmeyer/mp3 
beacon --start --verbose crawler,db


Logging

The default logfile for the server is $(dbdir)/server.log and $(dbdir)/fuse.log
for mount where $(dbdir) is $HOME/.beacon (the default) or as specified by the
--db command line option.  If --fg is specified, to make the process run in the
foreground, there will be no log files created and the logs will go to stderr.
If you would like to run in the foreground and also log to a file then you must
explicitly use --logfile /path/to/server.log.  This is especially useful for 
running beacon from /etc/inittab.



More about kaa.beacon later
