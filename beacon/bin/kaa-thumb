#!/usr/bin/python

import sys
import os
import kaa
import kaa.vfs
import kaa.metadata

counter = 0

def finished(t, size):
    global counter
    counter -= 1
    if t.get(size):
        print t.name, '->', t.get(size)
    else:
        print t.name, '(failed)'
    if not counter:
        sys.exit(0)


if len(sys.argv) < 2 or sys.argv[1] in ('-h', '--help'):
    print 'kaa-thumb [options] [ files ]'
    print
    print 'options:'
    print '  -l    create large thumbnails of the files'
    print '  -c    clean up .thumbnails dir'
    print '  -h    show this help'
    print
    sys.exit(0)
    

size = kaa.vfs.NORMAL
if sys.argv[1] == '-l':
    sys.argv = sys.argv[1:]
    size = kaa.vfs.LARGE


if sys.argv[1] == '-c':
    print 'clean thumbnails directory'
    listing = []
    for type in (kaa.vfs.LARGE, kaa.vfs.NORMAL):
        d = os.path.join(os.environ['HOME'], '.thumbnails/%s' % type)
        listing += [ '%s/%s' % (d,x) for x in os.listdir(d) ]

    total = len(listing)
    cur = 0
    for f in listing:
        cur += 1
        n = int((cur / float(total)) * 50)

        sys.stdout.write("|%51s| %d / %d\r" % (("="*n + ">").ljust(51), cur, total))
        sys.stdout.flush()

        info =kaa.metadata.parse(f)
        if not info or not info['Thumb::URI']:
            os.unlink(f)
            continue
        if not info['Thumb::URI'].startswith('file:/'):
            continue
        if os.path.exists(info['Thumb::URI'][5:]):
            continue
        os.unlink(f)
    print
    sys.exit(0)


for file in sys.argv[1:]:
    t = kaa.vfs.Thumbnail(file)
    t.create(size).connect(finished, t, size)
    counter += 1

kaa.main.run()
